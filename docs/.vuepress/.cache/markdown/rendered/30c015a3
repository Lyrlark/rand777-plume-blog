{"content":"<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">问题</p>\n<p>说一说盒模型有哪些？<br>\n它们有生么区别？</p>\n</div>\n<hr>\n<h3 id=\"盒模型简述\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型简述\"><span>盒模型简述</span></a></h3>\n<p>在网页布局中，盒模型（Box Model）是一个非常基础且重要的概念。每一个 HTML 元素在页面中都会被看作一个矩形的盒子，这个盒子由内容区（Content）、\n内边距（Padding）、边框（Border）和外边距（Margin）这几个部分组成。</p>\n<hr>\n<h3 id=\"盒模型的组成部分\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型的组成部分\"><span>盒模型的组成部分</span></a></h3>\n<ul>\n<li><strong>内容区（Content）</strong>：元素实际包含的内容，如文本、图片等，其大小由 <code v-pre>width</code> 和 <code v-pre>height</code> 属性控制（对于行内元素，宽度和高度由内容决定）。</li>\n<li><strong>内边距（Padding）</strong>：内容区与边框之间的距离，可通过 <code v-pre>padding-top</code>、<code v-pre>padding-right</code>、<code v-pre>padding-bottom</code>、<code v-pre>padding-left</code> 分别设置四个方向的内边距，也可以使用 <code v-pre>padding</code> 简写属性。内边距会影响元素的整体大小。</li>\n<li><strong>边框（Border）</strong>：围绕在内边距和内容区周围的线条，可通过 <code v-pre>border-width</code>、<code v-pre>border-style</code> 和 <code v-pre>border-color</code> 来定义边框的宽度、样式和颜色，同样也有简写属性 <code v-pre>border</code>。边框也会计入元素的整体大小。</li>\n<li><strong>外边距（Margin）</strong>：元素与其他元素之间的距离，可通过 <code v-pre>margin-top</code>、<code v-pre>margin-right</code>、<code v-pre>margin-bottom</code>、<code v-pre>margin-left</code> 分别设置四个方向的外边距，也有 <code v-pre>margin</code> 简写属性。外边距不会影响元素自身的大小，但会影响元素在页面中的布局位置。</li>\n</ul>\n<hr>\n<h3 id=\"盒模型的类型及区别\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型的类型及区别\"><span>盒模型的类型及区别</span></a></h3>\n<p>在 <code v-pre>CSS</code> 中，盒模型主要分为标准盒模型（ <code v-pre>W3C</code> 规定）和怪异盒模型（<code v-pre>IE</code> 盒模型），它们的主要区别在于元素宽度和高度的计算方式不同。</p>\n<h4 id=\"标准盒模型-content-box\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#标准盒模型-content-box\"><span>标准盒模型（content-box）</span></a></h4>\n<img src=\"/assets/interview_boxmodel_01.png\" style=\"height: 300px\">\n<ul>\n<li><strong>计算方式</strong>：元素的宽度（<code v-pre>width</code>）和高度（<code v-pre>height</code>）只包含内容区的宽度和高度，不包含内边距、边框和外边距。也就是说，</li>\n<li>如果设置一个元素的 <code v-pre>width</code> 为 200px，那么这个 200px 仅仅是内容区的宽度，元素实际占用的宽度还需要加上左右内边距和左右边框的宽度。</li>\n</ul>\n<h4 id=\"怪异盒模型-border-box\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#怪异盒模型-border-box\"><span>怪异盒模型（border-box）</span></a></h4>\n<img src=\"/assets/interview_boxmodel_02.png\" style=\"height: 300px\">\n<ul>\n<li><strong>计算方式</strong>：元素的宽度（<code v-pre>width</code>）和高度（<code v-pre>height</code>）包含了内容区、内边距和边框的大小，</li>\n<li>但不包含外边距。当设置元素的 <code v-pre>width</code> 为 200px 时，这 200px 是内容区、内边距和边框的总宽度。如果内边距和边框占用了一定的宽度，那么内容区的宽度就会相应减少。</li>\n</ul>\n","env":{"base":"/","filePath":"G:/200-Project/hoey-blog-plume/docs/notes/interview/2.CSS/盒模型.md","filePathRelative":"notes/interview/2.CSS/盒模型.md","frontmatter":{"title":"盒模型","createTime":"2025/02/04 20:26:55","permalink":"/interview/iotn1t81/"},"sfcBlocks":{"template":{"type":"template","content":"<template><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">问题</p>\n<p>说一说盒模型有哪些？<br>\n它们有生么区别？</p>\n</div>\n<hr>\n<h3 id=\"盒模型简述\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型简述\"><span>盒模型简述</span></a></h3>\n<p>在网页布局中，盒模型（Box Model）是一个非常基础且重要的概念。每一个 HTML 元素在页面中都会被看作一个矩形的盒子，这个盒子由内容区（Content）、\n内边距（Padding）、边框（Border）和外边距（Margin）这几个部分组成。</p>\n<hr>\n<h3 id=\"盒模型的组成部分\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型的组成部分\"><span>盒模型的组成部分</span></a></h3>\n<ul>\n<li><strong>内容区（Content）</strong>：元素实际包含的内容，如文本、图片等，其大小由 <code v-pre>width</code> 和 <code v-pre>height</code> 属性控制（对于行内元素，宽度和高度由内容决定）。</li>\n<li><strong>内边距（Padding）</strong>：内容区与边框之间的距离，可通过 <code v-pre>padding-top</code>、<code v-pre>padding-right</code>、<code v-pre>padding-bottom</code>、<code v-pre>padding-left</code> 分别设置四个方向的内边距，也可以使用 <code v-pre>padding</code> 简写属性。内边距会影响元素的整体大小。</li>\n<li><strong>边框（Border）</strong>：围绕在内边距和内容区周围的线条，可通过 <code v-pre>border-width</code>、<code v-pre>border-style</code> 和 <code v-pre>border-color</code> 来定义边框的宽度、样式和颜色，同样也有简写属性 <code v-pre>border</code>。边框也会计入元素的整体大小。</li>\n<li><strong>外边距（Margin）</strong>：元素与其他元素之间的距离，可通过 <code v-pre>margin-top</code>、<code v-pre>margin-right</code>、<code v-pre>margin-bottom</code>、<code v-pre>margin-left</code> 分别设置四个方向的外边距，也有 <code v-pre>margin</code> 简写属性。外边距不会影响元素自身的大小，但会影响元素在页面中的布局位置。</li>\n</ul>\n<hr>\n<h3 id=\"盒模型的类型及区别\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型的类型及区别\"><span>盒模型的类型及区别</span></a></h3>\n<p>在 <code v-pre>CSS</code> 中，盒模型主要分为标准盒模型（ <code v-pre>W3C</code> 规定）和怪异盒模型（<code v-pre>IE</code> 盒模型），它们的主要区别在于元素宽度和高度的计算方式不同。</p>\n<h4 id=\"标准盒模型-content-box\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#标准盒模型-content-box\"><span>标准盒模型（content-box）</span></a></h4>\n<img src=\"/assets/interview_boxmodel_01.png\" style=\"height: 300px\">\n<ul>\n<li><strong>计算方式</strong>：元素的宽度（<code v-pre>width</code>）和高度（<code v-pre>height</code>）只包含内容区的宽度和高度，不包含内边距、边框和外边距。也就是说，</li>\n<li>如果设置一个元素的 <code v-pre>width</code> 为 200px，那么这个 200px 仅仅是内容区的宽度，元素实际占用的宽度还需要加上左右内边距和左右边框的宽度。</li>\n</ul>\n<h4 id=\"怪异盒模型-border-box\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#怪异盒模型-border-box\"><span>怪异盒模型（border-box）</span></a></h4>\n<img src=\"/assets/interview_boxmodel_02.png\" style=\"height: 300px\">\n<ul>\n<li><strong>计算方式</strong>：元素的宽度（<code v-pre>width</code>）和高度（<code v-pre>height</code>）包含了内容区、内边距和边框的大小，</li>\n<li>但不包含外边距。当设置元素的 <code v-pre>width</code> 为 200px 时，这 200px 是内容区、内边距和边框的总宽度。如果内边距和边框占用了一定的宽度，那么内容区的宽度就会相应减少。</li>\n</ul>\n</template>","contentStripped":"<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">问题</p>\n<p>说一说盒模型有哪些？<br>\n它们有生么区别？</p>\n</div>\n<hr>\n<h3 id=\"盒模型简述\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型简述\"><span>盒模型简述</span></a></h3>\n<p>在网页布局中，盒模型（Box Model）是一个非常基础且重要的概念。每一个 HTML 元素在页面中都会被看作一个矩形的盒子，这个盒子由内容区（Content）、\n内边距（Padding）、边框（Border）和外边距（Margin）这几个部分组成。</p>\n<hr>\n<h3 id=\"盒模型的组成部分\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型的组成部分\"><span>盒模型的组成部分</span></a></h3>\n<ul>\n<li><strong>内容区（Content）</strong>：元素实际包含的内容，如文本、图片等，其大小由 <code v-pre>width</code> 和 <code v-pre>height</code> 属性控制（对于行内元素，宽度和高度由内容决定）。</li>\n<li><strong>内边距（Padding）</strong>：内容区与边框之间的距离，可通过 <code v-pre>padding-top</code>、<code v-pre>padding-right</code>、<code v-pre>padding-bottom</code>、<code v-pre>padding-left</code> 分别设置四个方向的内边距，也可以使用 <code v-pre>padding</code> 简写属性。内边距会影响元素的整体大小。</li>\n<li><strong>边框（Border）</strong>：围绕在内边距和内容区周围的线条，可通过 <code v-pre>border-width</code>、<code v-pre>border-style</code> 和 <code v-pre>border-color</code> 来定义边框的宽度、样式和颜色，同样也有简写属性 <code v-pre>border</code>。边框也会计入元素的整体大小。</li>\n<li><strong>外边距（Margin）</strong>：元素与其他元素之间的距离，可通过 <code v-pre>margin-top</code>、<code v-pre>margin-right</code>、<code v-pre>margin-bottom</code>、<code v-pre>margin-left</code> 分别设置四个方向的外边距，也有 <code v-pre>margin</code> 简写属性。外边距不会影响元素自身的大小，但会影响元素在页面中的布局位置。</li>\n</ul>\n<hr>\n<h3 id=\"盒模型的类型及区别\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型的类型及区别\"><span>盒模型的类型及区别</span></a></h3>\n<p>在 <code v-pre>CSS</code> 中，盒模型主要分为标准盒模型（ <code v-pre>W3C</code> 规定）和怪异盒模型（<code v-pre>IE</code> 盒模型），它们的主要区别在于元素宽度和高度的计算方式不同。</p>\n<h4 id=\"标准盒模型-content-box\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#标准盒模型-content-box\"><span>标准盒模型（content-box）</span></a></h4>\n<img src=\"/assets/interview_boxmodel_01.png\" style=\"height: 300px\">\n<ul>\n<li><strong>计算方式</strong>：元素的宽度（<code v-pre>width</code>）和高度（<code v-pre>height</code>）只包含内容区的宽度和高度，不包含内边距、边框和外边距。也就是说，</li>\n<li>如果设置一个元素的 <code v-pre>width</code> 为 200px，那么这个 200px 仅仅是内容区的宽度，元素实际占用的宽度还需要加上左右内边距和左右边框的宽度。</li>\n</ul>\n<h4 id=\"怪异盒模型-border-box\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#怪异盒模型-border-box\"><span>怪异盒模型（border-box）</span></a></h4>\n<img src=\"/assets/interview_boxmodel_02.png\" style=\"height: 300px\">\n<ul>\n<li><strong>计算方式</strong>：元素的宽度（<code v-pre>width</code>）和高度（<code v-pre>height</code>）包含了内容区、内边距和边框的大小，</li>\n<li>但不包含外边距。当设置元素的 <code v-pre>width</code> 为 200px 时，这 200px 是内容区、内边距和边框的总宽度。如果内边距和边框占用了一定的宽度，那么内容区的宽度就会相应减少。</li>\n</ul>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"::: tip 问题\n说一说盒模型有哪些？  \n它们有生么区别？\n:::\n\n---\n\n### 盒模型简述\n在网页布局中，盒模型（Box Model）是一个非常基础且重要的概念。每一个 HTML 元素在页面中都会被看作一个矩形的盒子，这个盒子由内容区（Content）、\n内边距（Padding）、边框（Border）和外边距（Margin）这几个部分组成。\n\n---\n\n### 盒模型的组成部分\n- **内容区（Content）**：元素实际包含的内容，如文本、图片等，其大小由 `width` 和 `height` 属性控制（对于行内元素，宽度和高度由内容决定）。\n- **内边距（Padding）**：内容区与边框之间的距离，可通过 `padding-top`、`padding-right`、`padding-bottom`、`padding-left` 分别设置四个方向的内边距，也可以使用 `padding` 简写属性。内边距会影响元素的整体大小。\n- **边框（Border）**：围绕在内边距和内容区周围的线条，可通过 `border-width`、`border-style` 和 `border-color` 来定义边框的宽度、样式和颜色，同样也有简写属性 `border`。边框也会计入元素的整体大小。\n- **外边距（Margin）**：元素与其他元素之间的距离，可通过 `margin-top`、`margin-right`、`margin-bottom`、`margin-left` 分别设置四个方向的外边距，也有 `margin` 简写属性。外边距不会影响元素自身的大小，但会影响元素在页面中的布局位置。\n\n---\n\n### 盒模型的类型及区别\n在 `CSS` 中，盒模型主要分为标准盒模型（ `W3C` 规定）和怪异盒模型（`IE` 盒模型），它们的主要区别在于元素宽度和高度的计算方式不同。\n\n#### 标准盒模型（content-box）\n\n<img src=\"/assets/interview_boxmodel_01.png\" style=\"height: 300px\">\n\n- **计算方式**：元素的宽度（`width`）和高度（`height`）只包含内容区的宽度和高度，不包含内边距、边框和外边距。也就是说，\n- 如果设置一个元素的 `width` 为 200px，那么这个 200px 仅仅是内容区的宽度，元素实际占用的宽度还需要加上左右内边距和左右边框的宽度。\n\n\n#### 怪异盒模型（border-box）\n\n<img src=\"/assets/interview_boxmodel_02.png\" style=\"height: 300px\">\n\n- **计算方式**：元素的宽度（`width`）和高度（`height`）包含了内容区、内边距和边框的大小，\n- 但不包含外边距。当设置元素的 `width` 为 200px 时，这 200px 是内容区、内边距和边框的总宽度。如果内边距和边框占用了一定的宽度，那么内容区的宽度就会相应减少。","excerpt":"","includedFiles":[],"tasklists":0,"title":"","headers":[{"level":3,"title":"盒模型简述","slug":"盒模型简述","link":"#盒模型简述","children":[]},{"level":3,"title":"盒模型的组成部分","slug":"盒模型的组成部分","link":"#盒模型的组成部分","children":[]},{"level":3,"title":"盒模型的类型及区别","slug":"盒模型的类型及区别","link":"#盒模型的类型及区别","children":[]}]}}
