{"content":"<p>JS对数组处理提供了许多方法，对目前在开发中经常用到且强大的方法做一个学习总结。</p>\n<!-- more -->\n<h2 id=\"_1-splice\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-splice\"><span>1.splice()</span></a></h2>\n<p><strong>功能</strong>：可以对数组指定位置进行删除增加与替换多个值，并放回一个处理后的新数组。它能够实现<span class=\"md-self-span\">push()</span>、<span class=\"md-self-span\">pup()</span>、<span class=\"md-self-span\">unshift()</span>、<span class=\"md-self-span\">shift()</span>的功能，但区别是<span class=\"md-self-span\">splice()</span>不改变原数组且更加强大。<br>\n<strong>参数</strong>：<br>\n<strong>splice(index,howmany,item1,..., itemX)</strong><br>\n<strong>index</strong>：添加/删除的元素下标，使用负数可从数组结尾处规定位置。必须。<br>\n<strong>howmany</strong>：要删除的元素个数，为0则不删除元素。必须。<br>\n<strong>item</strong>：向数组中添加的元素，可以为多个。非必须。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">var</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //原数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">var</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> result</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">splice</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">6</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">7</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //1 2 3 4 5</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">result</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //1 6 7 4 5</span></span></code></pre>\n</div><h2 id=\"_2-sort\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-sort\"><span>2.sort</span></a></h2>\n<p><strong>功能</strong>：可以对数组元素进行排序，默认排序顺序是根据字符串Unicode码点。<br>\n<strong>语法</strong>：<span class=\"md-self-span\">arr.sort(compareFunction)</span> 。</p>\n<ol>\n<li>不指明compareFunction，那么元素会按照转换为的字符串的Unicode位点进行排序。</li>\n<li>指明compareFunction，数组将按照compareFunction返回值排序。<br>\ncompareFunction(a, b)小于0，则a排在b前面。<br>\ncompareFunction(a, b)大于0，则a排在b后面。<br>\n等于0，a b顺序不变，</li>\n</ol>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">var</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=[</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">6</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">9</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">//升序  a-b&#x3C;=0，则a在前，否则b在前</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">sort</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">b</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> a</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">-</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">b</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">})</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">//降序  b-a&#x3C;=0，则a在前</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">sort</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">b</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> b</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">-</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span></code></pre>\n</div><h2 id=\"_3-foreach-map-filter-every-some\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-foreach-map-filter-every-some\"><span>3.foreach map filter every some</span></a></h2>\n<p><span class=\"md-self-span\">foreach</span>,\n<span class=\"md-self-span\">map</span>,\n<span class=\"md-self-span\">filter</span>,\n<span class=\"md-self-span\">every</span>,\n<span class=\"md-self-span\">some</span>\n具有相同点：它们都遍历数组，且每次循环时执行传入的回调函数。回调函数为：</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">index</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">array</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">){}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> * item:循环的当前元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> * index:当前元素下标</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> * array:原数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> * **/</span></span></code></pre>\n</div><h3 id=\"_1-foreach-map\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-foreach-map\"><span>1.foreach  map</span></a></h3>\n<p><span class=\"md-self-span\">foreach</span>每次循环执行回调函数，它不改变原数组，且没有返回值。而<span class=\"md-self-span\">map</span>\n会根据回调函数返回的处理结果，生成一个新数组。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 数组和</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> sum</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">forEach</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =></span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> sum</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">+=</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">})</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">sum</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //15</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 数组元素加1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">const</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">map</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">   return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> item</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> +</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">新数组</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //[2, 3, 4, 5, 6]</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"_2-filter\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-filter\"><span>2.filter</span></a></h3>\n<p><span class=\"md-self-span\">filter</span>过滤元素，会将满足回调函数条件的元素筛选出来组成为一个新数组。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 判断偶数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">var</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> list</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">var</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> list</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">filter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">   return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> item</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> %</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ===</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> // true || false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">res</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //[2, 4]</span></span></code></pre>\n</div><h3 id=\"_3-every-some\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-every-some\"><span>3.every some</span></a></h3>\n<p><span class=\"md-self-span\">every</span>与<span class=\"md-self-span\">some</span>有相同之处，它们均根据回调函数判断遍历元素是否符合条件，区别在于\n<span class=\"md-self-span\">every</span> <strong>当所有元素满足条件才返回true，否则返回false；而<span class=\"md-self-span\">some</span>则是存在元素满足条件则返回true，否则返回false。</strong></p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> list</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 判断是否每个元素为偶数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res_every</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> list</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">every</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> item</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> %</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ===</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> // true || false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 判断是否存在元素为偶数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res_some</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> list</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">some</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> item</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> %</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ===</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> // true || false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">res_every</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">res_some</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //true</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"_4-reduce\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_4-reduce\"><span>4.reduce</span></a></h2>\n<p><span class=\"md-self-span\">reduce</span>相较于其它函数更为复杂。<br>\n<strong>语法</strong>：reduce(callbackFn, initialValue)<br>\n<strong>参数</strong>  ：</p>\n<ol>\n<li>\n<p><strong>callbackFn</strong>：为数组中每个元素执行的函数。其返回值将作为下一次调用 callbackFn 时的 accumulator 参数。对于最后一次调用，返回值将作为 reduce() 的返回值。该函数被调用时将传入以下参数：</p>\n<ol>\n<li><strong>accumulator</strong>：上一次调用 callbackFn 的结果。在第一次调用时，如果指定了 initialValue 则为指定的值，否则为 array[0] 的值。</li>\n<li><strong>currentValue</strong>：当前元素的值。在第一次调用时，如果指定了 initialValue，则为 array[0]的值，否则为array[1]。</li>\n<li><strong>currentIndex</strong>：currentValue 在数组中的索引位置。在第一次调用时，如果指定了 initialValue 则为 0，否则为 1。</li>\n<li><strong>array</strong>：原数组。</li>\n</ol>\n</li>\n<li>\n<p><strong>initialValue(可选)</strong>：用于指定第一次accumulator的值，是否指定则会影响currentValue，currentIndex的值，如上。</p>\n</li>\n</ol>\n<p><strong>用法</strong>：</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 6</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 8</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">const</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">reduce</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">accumulator</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> currentValue</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">//由于没有指定initialValue,则第一次调用回调accumulator=4，currentValue=3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> Math</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">max</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">accumulator</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> currentValue</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">res1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //8</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 指定了由于没有指定initialValue为5，因此第一次回调时，accumulator=5，currentValue=4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">const</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">reduce</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">accumulator</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> currentValue</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> Math</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">max</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">accumulator</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> currentValue</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">},</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">res2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //8</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>js中还有更多数组处理的函数，学习可查看<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/at\" target=\"_blank\" rel=\"noopener noreferrer\">此链接</a>。</p>\n","env":{"base":"/","filePath":"G:/200-Project/hoey-blog-plume/docs/学文/23053001.md","filePathRelative":"学文/23053001.md","frontmatter":{"title":"JS中的数组处理函数","createTime":"2023/5/30","tags":["JavaScript"],"permalink":"/article/23053001/"},"sfcBlocks":{"template":{"type":"template","content":"<template><p>JS对数组处理提供了许多方法，对目前在开发中经常用到且强大的方法做一个学习总结。</p>\n<!-- more -->\n<h2 id=\"_1-splice\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-splice\"><span>1.splice()</span></a></h2>\n<p><strong>功能</strong>：可以对数组指定位置进行删除增加与替换多个值，并放回一个处理后的新数组。它能够实现<span class=\"md-self-span\">push()</span>、<span class=\"md-self-span\">pup()</span>、<span class=\"md-self-span\">unshift()</span>、<span class=\"md-self-span\">shift()</span>的功能，但区别是<span class=\"md-self-span\">splice()</span>不改变原数组且更加强大。<br>\n<strong>参数</strong>：<br>\n<strong>splice(index,howmany,item1,..., itemX)</strong><br>\n<strong>index</strong>：添加/删除的元素下标，使用负数可从数组结尾处规定位置。必须。<br>\n<strong>howmany</strong>：要删除的元素个数，为0则不删除元素。必须。<br>\n<strong>item</strong>：向数组中添加的元素，可以为多个。非必须。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">var</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //原数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">var</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> result</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">splice</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">6</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">7</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //1 2 3 4 5</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">result</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //1 6 7 4 5</span></span></code></pre>\n</div><h2 id=\"_2-sort\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-sort\"><span>2.sort</span></a></h2>\n<p><strong>功能</strong>：可以对数组元素进行排序，默认排序顺序是根据字符串Unicode码点。<br>\n<strong>语法</strong>：<span class=\"md-self-span\">arr.sort(compareFunction)</span> 。</p>\n<ol>\n<li>不指明compareFunction，那么元素会按照转换为的字符串的Unicode位点进行排序。</li>\n<li>指明compareFunction，数组将按照compareFunction返回值排序。<br>\ncompareFunction(a, b)小于0，则a排在b前面。<br>\ncompareFunction(a, b)大于0，则a排在b后面。<br>\n等于0，a b顺序不变，</li>\n</ol>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">var</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=[</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">6</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">9</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">//升序  a-b&#x3C;=0，则a在前，否则b在前</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">sort</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">b</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> a</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">-</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">b</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">})</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">//降序  b-a&#x3C;=0，则a在前</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">sort</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">b</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> b</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">-</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span></code></pre>\n</div><h2 id=\"_3-foreach-map-filter-every-some\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-foreach-map-filter-every-some\"><span>3.foreach map filter every some</span></a></h2>\n<p><span class=\"md-self-span\">foreach</span>,\n<span class=\"md-self-span\">map</span>,\n<span class=\"md-self-span\">filter</span>,\n<span class=\"md-self-span\">every</span>,\n<span class=\"md-self-span\">some</span>\n具有相同点：它们都遍历数组，且每次循环时执行传入的回调函数。回调函数为：</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">index</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">array</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">){}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> * item:循环的当前元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> * index:当前元素下标</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> * array:原数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> * **/</span></span></code></pre>\n</div><h3 id=\"_1-foreach-map\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-foreach-map\"><span>1.foreach  map</span></a></h3>\n<p><span class=\"md-self-span\">foreach</span>每次循环执行回调函数，它不改变原数组，且没有返回值。而<span class=\"md-self-span\">map</span>\n会根据回调函数返回的处理结果，生成一个新数组。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 数组和</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> sum</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">forEach</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =></span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> sum</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">+=</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">})</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">sum</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //15</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 数组元素加1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">const</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">map</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">   return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> item</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> +</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">新数组</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //[2, 3, 4, 5, 6]</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"_2-filter\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-filter\"><span>2.filter</span></a></h3>\n<p><span class=\"md-self-span\">filter</span>过滤元素，会将满足回调函数条件的元素筛选出来组成为一个新数组。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 判断偶数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">var</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> list</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">var</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> list</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">filter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">   return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> item</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> %</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ===</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> // true || false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">res</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //[2, 4]</span></span></code></pre>\n</div><h3 id=\"_3-every-some\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-every-some\"><span>3.every some</span></a></h3>\n<p><span class=\"md-self-span\">every</span>与<span class=\"md-self-span\">some</span>有相同之处，它们均根据回调函数判断遍历元素是否符合条件，区别在于\n<span class=\"md-self-span\">every</span> <strong>当所有元素满足条件才返回true，否则返回false；而<span class=\"md-self-span\">some</span>则是存在元素满足条件则返回true，否则返回false。</strong></p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> list</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 判断是否每个元素为偶数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res_every</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> list</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">every</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> item</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> %</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ===</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> // true || false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 判断是否存在元素为偶数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res_some</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> list</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">some</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> item</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> %</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ===</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> // true || false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">res_every</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">res_some</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //true</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"_4-reduce\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_4-reduce\"><span>4.reduce</span></a></h2>\n<p><span class=\"md-self-span\">reduce</span>相较于其它函数更为复杂。<br>\n<strong>语法</strong>：reduce(callbackFn, initialValue)<br>\n<strong>参数</strong>  ：</p>\n<ol>\n<li>\n<p><strong>callbackFn</strong>：为数组中每个元素执行的函数。其返回值将作为下一次调用 callbackFn 时的 accumulator 参数。对于最后一次调用，返回值将作为 reduce() 的返回值。该函数被调用时将传入以下参数：</p>\n<ol>\n<li><strong>accumulator</strong>：上一次调用 callbackFn 的结果。在第一次调用时，如果指定了 initialValue 则为指定的值，否则为 array[0] 的值。</li>\n<li><strong>currentValue</strong>：当前元素的值。在第一次调用时，如果指定了 initialValue，则为 array[0]的值，否则为array[1]。</li>\n<li><strong>currentIndex</strong>：currentValue 在数组中的索引位置。在第一次调用时，如果指定了 initialValue 则为 0，否则为 1。</li>\n<li><strong>array</strong>：原数组。</li>\n</ol>\n</li>\n<li>\n<p><strong>initialValue(可选)</strong>：用于指定第一次accumulator的值，是否指定则会影响currentValue，currentIndex的值，如上。</p>\n</li>\n</ol>\n<p><strong>用法</strong>：</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 6</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 8</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">const</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">reduce</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">accumulator</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> currentValue</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">//由于没有指定initialValue,则第一次调用回调accumulator=4，currentValue=3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> Math</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">max</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">accumulator</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> currentValue</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">res1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //8</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 指定了由于没有指定initialValue为5，因此第一次回调时，accumulator=5，currentValue=4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">const</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">reduce</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">accumulator</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> currentValue</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> Math</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">max</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">accumulator</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> currentValue</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">},</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">res2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //8</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>js中还有更多数组处理的函数，学习可查看<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/at\" target=\"_blank\" rel=\"noopener noreferrer\">此链接</a>。</p>\n</template>","contentStripped":"<p>JS对数组处理提供了许多方法，对目前在开发中经常用到且强大的方法做一个学习总结。</p>\n<!-- more -->\n<h2 id=\"_1-splice\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-splice\"><span>1.splice()</span></a></h2>\n<p><strong>功能</strong>：可以对数组指定位置进行删除增加与替换多个值，并放回一个处理后的新数组。它能够实现<span class=\"md-self-span\">push()</span>、<span class=\"md-self-span\">pup()</span>、<span class=\"md-self-span\">unshift()</span>、<span class=\"md-self-span\">shift()</span>的功能，但区别是<span class=\"md-self-span\">splice()</span>不改变原数组且更加强大。<br>\n<strong>参数</strong>：<br>\n<strong>splice(index,howmany,item1,..., itemX)</strong><br>\n<strong>index</strong>：添加/删除的元素下标，使用负数可从数组结尾处规定位置。必须。<br>\n<strong>howmany</strong>：要删除的元素个数，为0则不删除元素。必须。<br>\n<strong>item</strong>：向数组中添加的元素，可以为多个。非必须。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">var</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //原数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">var</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> result</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">splice</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">6</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">7</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //1 2 3 4 5</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">result</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //1 6 7 4 5</span></span></code></pre>\n</div><h2 id=\"_2-sort\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-sort\"><span>2.sort</span></a></h2>\n<p><strong>功能</strong>：可以对数组元素进行排序，默认排序顺序是根据字符串Unicode码点。<br>\n<strong>语法</strong>：<span class=\"md-self-span\">arr.sort(compareFunction)</span> 。</p>\n<ol>\n<li>不指明compareFunction，那么元素会按照转换为的字符串的Unicode位点进行排序。</li>\n<li>指明compareFunction，数组将按照compareFunction返回值排序。<br>\ncompareFunction(a, b)小于0，则a排在b前面。<br>\ncompareFunction(a, b)大于0，则a排在b后面。<br>\n等于0，a b顺序不变，</li>\n</ol>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">var</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=[</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">6</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">9</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">//升序  a-b&#x3C;=0，则a在前，否则b在前</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">sort</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">b</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> a</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">-</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">b</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">})</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">//降序  b-a&#x3C;=0，则a在前</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">sort</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">b</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> b</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">-</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">a</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span></code></pre>\n</div><h2 id=\"_3-foreach-map-filter-every-some\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-foreach-map-filter-every-some\"><span>3.foreach map filter every some</span></a></h2>\n<p><span class=\"md-self-span\">foreach</span>,\n<span class=\"md-self-span\">map</span>,\n<span class=\"md-self-span\">filter</span>,\n<span class=\"md-self-span\">every</span>,\n<span class=\"md-self-span\">some</span>\n具有相同点：它们都遍历数组，且每次循环时执行传入的回调函数。回调函数为：</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">index</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">array</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">){}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> * item:循环的当前元素</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> * index:当前元素下标</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> * array:原数组</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> * **/</span></span></code></pre>\n</div><h3 id=\"_1-foreach-map\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-foreach-map\"><span>1.foreach  map</span></a></h3>\n<p><span class=\"md-self-span\">foreach</span>每次循环执行回调函数，它不改变原数组，且没有返回值。而<span class=\"md-self-span\">map</span>\n会根据回调函数返回的处理结果，生成一个新数组。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 数组和</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> sum</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">forEach</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =></span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> sum</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">+=</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">})</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">sum</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //15</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 数组元素加1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">const</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">map</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">   return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> item</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> +</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">新数组</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //[2, 3, 4, 5, 6]</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"_2-filter\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-filter\"><span>2.filter</span></a></h3>\n<p><span class=\"md-self-span\">filter</span>过滤元素，会将满足回调函数条件的元素筛选出来组成为一个新数组。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 判断偶数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">var</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> list</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">var</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> list</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">filter</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">   return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> item</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> %</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ===</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> // true || false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">res</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //[2, 4]</span></span></code></pre>\n</div><h3 id=\"_3-every-some\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-every-some\"><span>3.every some</span></a></h3>\n<p><span class=\"md-self-span\">every</span>与<span class=\"md-self-span\">some</span>有相同之处，它们均根据回调函数判断遍历元素是否符合条件，区别在于\n<span class=\"md-self-span\">every</span> <strong>当所有元素满足条件才返回true，否则返回false；而<span class=\"md-self-span\">some</span>则是存在元素满足条件则返回true，否则返回false。</strong></p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> list</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 判断是否每个元素为偶数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res_every</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> list</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">every</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> item</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> %</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ===</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> // true || false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 判断是否存在元素为偶数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res_some</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> list</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">some</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">item</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> item</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> %</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 2</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ===</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\"> // true || false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">res_every</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">res_some</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //true</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"_4-reduce\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_4-reduce\"><span>4.reduce</span></a></h2>\n<p><span class=\"md-self-span\">reduce</span>相较于其它函数更为复杂。<br>\n<strong>语法</strong>：reduce(callbackFn, initialValue)<br>\n<strong>参数</strong>  ：</p>\n<ol>\n<li>\n<p><strong>callbackFn</strong>：为数组中每个元素执行的函数。其返回值将作为下一次调用 callbackFn 时的 accumulator 参数。对于最后一次调用，返回值将作为 reduce() 的返回值。该函数被调用时将传入以下参数：</p>\n<ol>\n<li><strong>accumulator</strong>：上一次调用 callbackFn 的结果。在第一次调用时，如果指定了 initialValue 则为指定的值，否则为 array[0] 的值。</li>\n<li><strong>currentValue</strong>：当前元素的值。在第一次调用时，如果指定了 initialValue，则为 array[0]的值，否则为array[1]。</li>\n<li><strong>currentIndex</strong>：currentValue 在数组中的索引位置。在第一次调用时，如果指定了 initialValue 则为 0，否则为 1。</li>\n<li><strong>array</strong>：原数组。</li>\n</ol>\n</li>\n<li>\n<p><strong>initialValue(可选)</strong>：用于指定第一次accumulator的值，是否指定则会影响currentValue，currentIndex的值，如上。</p>\n</li>\n</ol>\n<p><strong>用法</strong>：</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">let</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">4</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 3</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 6</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 8</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">const</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">reduce</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">accumulator</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> currentValue</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">//由于没有指定initialValue,则第一次调用回调accumulator=4，currentValue=3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> Math</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">max</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">accumulator</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> currentValue</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">res1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //8</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 指定了由于没有指定initialValue为5，因此第一次回调时，accumulator=5，currentValue=4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">const</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> res2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> arr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">reduce</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">function</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">accumulator</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> currentValue</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> Math</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">max</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">accumulator</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> currentValue</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">},</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">5</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">console</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">.</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">log</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">res2</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  //8</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>js中还有更多数组处理的函数，学习可查看<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/at\" target=\"_blank\" rel=\"noopener noreferrer\">此链接</a>。</p>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"JS对数组处理提供了许多方法，对目前在开发中经常用到且强大的方法做一个学习总结。\r\n<!-- more -->\r\n## 1.splice()\r\n**功能**：可以对数组指定位置进行删除增加与替换多个值，并放回一个处理后的新数组。它能够实现<span class=\"md-self-span\">push()</span>、<span class=\"md-self-span\">pup()</span>、<span class=\"md-self-span\">unshift()</span>、<span class=\"md-self-span\">shift()</span>的功能，但区别是<span class=\"md-self-span\">splice()</span>不改变原数组且更加强大。  \r\n**参数**：  \r\n**splice(index,howmany,item1,..., itemX)**  \r\n**index**：添加/删除的元素下标，使用负数可从数组结尾处规定位置。必须。  \r\n**howmany**：要删除的元素个数，为0则不删除元素。必须。  \r\n**item**：向数组中添加的元素，可以为多个。非必须。  \r\n```js\r\nvar arr = [1,2,3,4,5]  //原数组\r\nvar result = arr.splice(1,2,6,7);\r\nconsole.log(arr)  //1 2 3 4 5\r\nconsole.log(result)  //1 6 7 4 5\r\n```\r\n## 2.sort\r\n**功能**：可以对数组元素进行排序，默认排序顺序是根据字符串Unicode码点。  \r\n**语法**：<span class=\"md-self-span\">arr.sort(compareFunction)</span> 。\r\n1. 不指明compareFunction，那么元素会按照转换为的字符串的Unicode位点进行排序。\r\n2. 指明compareFunction，数组将按照compareFunction返回值排序。  \r\n   compareFunction(a, b)小于0，则a排在b前面。  \r\n   compareFunction(a, b)大于0，则a排在b后面。  \r\n   等于0，a b顺序不变，\r\n```js\r\nvar a=[4,2,6,1,5,9];\r\n//升序  a-b<=0，则a在前，否则b在前\r\na.sort(function(a,b){\r\n    return a-b;\r\n})\r\n//降序  b-a<=0，则a在前\r\na.sort(function(a,b){\r\n    return b-a;\r\n});\r\n```\r\n## 3.foreach map filter every some\r\n<span class=\"md-self-span\">foreach</span>,\r\n<span class=\"md-self-span\">map</span>,\r\n<span class=\"md-self-span\">filter</span>,\r\n<span class=\"md-self-span\">every</span>,\r\n<span class=\"md-self-span\">some</span>\r\n具有相同点：它们都遍历数组，且每次循环时执行传入的回调函数。回调函数为：\r\n```js\r\nfunction (item,index,array){}\r\n/**\r\n * item:循环的当前元素\r\n * index:当前元素下标\r\n * array:原数组\r\n * **/\r\n```\r\n### 1.foreach  map\r\n<span class=\"md-self-span\">foreach</span>每次循环执行回调函数，它不改变原数组，且没有返回值。而<span class=\"md-self-span\">map</span>\r\n会根据回调函数返回的处理结果，生成一个新数组。\r\n```js\r\n// 数组和\r\nlet sum = 0\r\nlet arr = [1, 2, 3, 4, 5]\r\narr.forEach(item => {\r\n    return sum+=item\r\n})\r\nconsole.log(sum)  //15\r\n// 数组元素加1\r\nlet arr = [1, 2, 3, 4, 5]\r\nconst res = arr.map(function (item) {\r\n   return item + 1;\r\n});\r\nconsole.log(\"新数组\", res);  //[2, 3, 4, 5, 6]\r\n```\r\n### 2.filter\r\n<span class=\"md-self-span\">filter</span>过滤元素，会将满足回调函数条件的元素筛选出来组成为一个新数组。\r\n```js\r\n// 判断偶数\r\nvar list = [1, 2, 3, 4, 5];\r\nvar res = list.filter(function (item) {\r\n   return item % 2 === 0; // true || false\r\n});\r\nconsole.log(res);  //[2, 4]\r\n```\r\n### 3.every some\r\n<span class=\"md-self-span\">every</span>与<span class=\"md-self-span\">some</span>有相同之处，它们均根据回调函数判断遍历元素是否符合条件，区别在于\r\n<span class=\"md-self-span\">every</span> **当所有元素满足条件才返回true，否则返回false；而<span class=\"md-self-span\">some</span>则是存在元素满足条件则返回true，否则返回false。**  \r\n```js\r\nlet list = [1, 2, 3, 4, 5];\r\n// 判断是否每个元素为偶数\r\nlet res_every = list.every(function (item) {\r\n    return item % 2 === 0; // true || false\r\n});\r\n// 判断是否存在元素为偶数\r\nlet res_some = list.some(function (item) {\r\n    return item % 2 === 0; // true || false\r\n});\r\nconsole.log(res_every);  //false\r\nconsole.log(res_some);  //true\r\n```\r\n## 4.reduce\r\n<span class=\"md-self-span\">reduce</span>相较于其它函数更为复杂。  \r\n**语法**：reduce(callbackFn, initialValue)  \r\n**参数**  ：\r\n   1. **callbackFn**：为数组中每个元素执行的函数。其返回值将作为下一次调用 callbackFn 时的 accumulator 参数。对于最后一次调用，返回值将作为 reduce() 的返回值。该函数被调用时将传入以下参数： \r\n      1. **accumulator**：上一次调用 callbackFn 的结果。在第一次调用时，如果指定了 initialValue 则为指定的值，否则为 array[0] 的值。  \r\n      2. **currentValue**：当前元素的值。在第一次调用时，如果指定了 initialValue，则为 array[0]的值，否则为array[1]。\r\n      3. **currentIndex**：currentValue 在数组中的索引位置。在第一次调用时，如果指定了 initialValue 则为 0，否则为 1。\r\n      4. **array**：原数组。  \r\n\r\n  2. **initialValue(可选)**：用于指定第一次accumulator的值，是否指定则会影响currentValue，currentIndex的值，如上。  \r\n\r\n**用法**：\r\n```js\r\nlet arr = [4, 3, 1, 6, 8]\r\nconst res1 = arr.reduce(function (accumulator, currentValue) {\r\n//由于没有指定initialValue,则第一次调用回调accumulator=4，currentValue=3\r\n    return Math.max(accumulator, currentValue);\r\n});\r\nconsole.log(res1);  //8\r\n// 指定了由于没有指定initialValue为5，因此第一次回调时，accumulator=5，currentValue=4\r\nconst res2 = arr.reduce(function (accumulator, currentValue) {\r\n    return Math.max(accumulator, currentValue);\r\n},5);\r\nconsole.log(res2);  //8\r\n```\r\njs中还有更多数组处理的函数，学习可查看[此链接](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/at)。","excerpt":"","includedFiles":[],"tasklistId":0,"title":"","headers":[{"level":2,"title":"1.splice()","slug":"_1-splice","link":"#_1-splice","children":[]},{"level":2,"title":"2.sort","slug":"_2-sort","link":"#_2-sort","children":[]},{"level":2,"title":"3.foreach map filter every some","slug":"_3-foreach-map-filter-every-some","link":"#_3-foreach-map-filter-every-some","children":[{"level":3,"title":"1.foreach  map","slug":"_1-foreach-map","link":"#_1-foreach-map","children":[]},{"level":3,"title":"2.filter","slug":"_2-filter","link":"#_2-filter","children":[]},{"level":3,"title":"3.every some","slug":"_3-every-some","link":"#_3-every-some","children":[]}]},{"level":2,"title":"4.reduce","slug":"_4-reduce","link":"#_4-reduce","children":[]}]}}
